---
version: "3"

vars:
  C: '{{.C | default "kube-prod"}}'
  APPLY: '{{.APPLY | default "false"}}'

tasks:
  switch:
    aliases: [ctx]
    cmds:
      - talosctl config context {{.C}}
      - |
        sed -i "s/current-context: admin@.*/current-context: admin@{{.C}}/g" ~/.kube/config || true

  init-full:
    aliases: [init]
    cmds:
      - task: switch
      - task: :flux:install
      - task: init-config
      - task: apply-resources
      - task: apply-flux-resources

  update-vars:
    cmds:
      - task: switch
      - task: init-config
      - task: apply-resources
        vars:
          APPLY: true

  init-config:
    aliases: [initcfg]
    cmds:
      - task: decrypt-sops
        vars:
          ENV_FILE: "{{.ROOT_DIR}}/kubernetes/clusters/{{.C}}/vars/vars.sops.env"
          NAME: '{{ .NAME | default "vars" }}'
      - task: decrypt-sops
        vars:
          ENV_FILE: "{{.ROOT_DIR}}/kubernetes/clusters/{{.C}}/vars/secrets.sops.env"
          NAME: '{{ .NAME | default "secrets" }}'

  decrypt-sops:
    vars:
      ENV_FILE: '{{ or .ENV_FILE (fail "Missing FILE environment variable!") }}'
      NAME: '{{ or .NAME (fail "Missing NAME environment variable!") }}'
    cmds:
      - sops exec-file {{.ENV_FILE}} "SOPS_FILE={} task --taskfile {{.ROOT_DIR}}/Taskfile.dist.yaml cluster:generate-kustomization APPLY={{.APPLY}} NAME={{.NAME}}"

  generate-kustomization:
    vars:
      KUSTOMIZATION_TEMPLATE: "{{.ROOT_DIR}}/kubernetes/bootstrap/config/secret-generator-kustomization.tmpl.yaml"
      SECRET_TEMPLATE: "{{.ROOT_DIR}}/kubernetes/bootstrap/config/secret.tmpl.yaml"
      SOPS_DIR:
        sh: echo {{.SOPS_FILE}} | xargs dirname
      SED_COMMAND: 's/\="/: "/g'
    cmds:
      - cat {{.SOPS_FILE}} > {{.SOPS_DIR}}/vars.unencrypted.yaml
      - sed -i {{.SED_COMMAND}} {{.SOPS_DIR}}/vars.unencrypted.yaml
      - yq eval-all 'select(fileIndex==0).stringData = select(fileIndex==1) | select(fileIndex==0)' {{.SECRET_TEMPLATE}} {{.SOPS_DIR}}/vars.unencrypted.yaml > {{.SOPS_DIR}}/{{.C}}-{{.NAME}}.unencrypted.yaml
      - CLUSTER={{.C}} NAME={{.NAME}} yq -i '(.. | select(tag == "!!str")) |= envsubst' {{.SOPS_DIR}}/{{.C}}-{{.NAME}}.unencrypted.yaml
      - sops -e {{.SOPS_DIR}}/{{.C}}-{{.NAME}}.unencrypted.yaml > {{.ROOT_DIR}}/kubernetes/clusters/{{.C}}/vars/{{.C}}-{{.NAME}}.yaml

  apply-resources:
    dir: "{{.ROOT_DIR}}/kubernetes/clusters/{{.C}}"
    vars:
      APPLY: '{{ or .APPLY (fail "Missing APPLY environment variable!") }}'
    preconditions:
      - sh: '[ {{.APPLY}} = "true" ]'
        msg: "Apply isn't enabled, will not apply!"
    cmds:
      - sops --decrypt ./vars/{{.C}}-secrets.yaml | kubectl apply -f -
      - sops --decrypt ./vars/{{.C}}-vars.yaml | kubectl apply -f -

  apply-flux-resources:
    dir: "{{.ROOT_DIR}}/kubernetes/clusters/{{.C}}"
    vars:
      APPLY: '{{ or .APPLY (fail "Missing APPLY environment variable!") }}'
    preconditions:
      - sh: '[ {{.APPLY}} = "true" ]'
        msg: "Apply isn't enabled, will not apply!"
    cmds:
      - sops --decrypt ./vars/secrets-age.sops.yaml | kubectl apply -f -
      - sops --decrypt ./vars/secrets-ssh.sops.yaml | kubectl apply -f -
      - kubectl apply --server-side -f ./flux/flux-repo.yaml
