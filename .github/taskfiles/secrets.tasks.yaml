---
version: "3"

vars:
  VARS_FILE: "{{.ROOT_DIR}}/kubernetes/clusters/{{.C}}/vars/vars.sops.env"
  SECRETS_FILE: "{{.ROOT_DIR}}/kubernetes/clusters/{{.C}}/vars/secrets.sops.env"

tasks:
  # Add account to 1 Password Cli (op)
  op-add-account:
    status:
      - if [[ -n $(op account list) ]]; then exit 0; else exit 1; fi
    cmds:
      - sops exec-env {{.SECRETS_FILE}} '
        unset 'OP_CONNECT_HOST' && unset 'OP_CONNECT_TOKEN' &&
        op account add --address my.1password.com --email $OP_EMAIL'

  # Check to see if 1 Password Cli (op) is signed in
  op-sign-in:
    status:
      - op account get
    cmds:
      - echo -e 'One Password is not signed in. Run this command to sign-in:\neval $(op signin)'
      - exit 1

  # Inject encrypted variables to a temp .env file for consumption by taskfile dotenv
  decrypt-env:
    desc: Extract encrypted variables from SOPS config file to be used as .env for tasks
    vars:
      C: '{{ or .C (fail "\n\nERROR ->  Missing CLUSTER environment variable!") }}'
    status:
      - test -f {{.SECRETS_DIR}}/{{.C}}.vars.unencrypted.env
    deps: [op-add-account, op-sign-in]
    cmds:
      - sops exec-file {{.VARS_FILE}} 'op inject -i {}' >> {{.SECRETS_DIR}}/{{.C}}.vars.unencrypted.env
      - sops exec-file {{.SECRETS_FILE}} 'op inject -i {}' >> {{.SECRETS_DIR}}/{{.C}}.vars.unencrypted.env

  # Injection of decrypted secrets directly into task
  inject-task:
    vars:
      CLI_ARGS: '{{.CLI_ARGS | default "list"}}'
      C: '{{ or .C (fail "\n\nERROR ->  Missing CLUSTER environment variable!") }}'
    deps: [op-add-account, op-sign-in]
    cmds:
      - sops exec-env {{.VARS_FILE}} 'sops exec-env {{.SECRETS_FILE}} "op run -- task --taskfile {{.ROOT_DIR}}/Taskfile.dist.yaml {{.CLI_ARGS}} C={{.C}}"'

  # Injection of decrypted secrets directly into environment variables for command execution
  inject-command:
    vars:
      CMD: '{{ or .CMD (fail "\n\nERROR ->  Missing CMD task variable!") }}'
    deps: [op-add-account, op-sign-in]
    cmds:
      - sops exec-env {{.VARS_FILE}} 'sops exec-env {{.SECRETS_FILE}} "op run -- {{.CMD}}"'

  # Cleanup unencrypted temp .env files
  cleanup-secrets:
    status:
      - if [[ -z "$(ls -A {{.SECRETS_DIR}})" ]]; then exit 0; else exit 1; fi
    cmds:
      # Remove all temp secret files from secrets directory
      - rm -rf {{.SECRETS_DIR}}/*
